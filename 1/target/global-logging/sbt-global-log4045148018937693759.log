[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\ferna\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\ferna\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.9 (Oracle Corporation Java 14.0.2)
[debug]       Load.loadUnit: plugins took 89.0411ms
[debug]       Load.loadUnit: defsScala took 0.2353ms
[debug] [Loading] Scanning directory C:\Users\ferna\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ferna\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 20.7086 ms
[debug]           Load.resolveProject(global-plugins) took 43.7506ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\ferna\.sbt\1.0\plugins, plugins: List(<none>))) took 86.9846ms
[debug] [Loading] Done in C:\Users\ferna\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 107.4852ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2203ms
[debug]     Load.loadUnit(file:/C:/Users/ferna/.sbt/1.0/plugins/, ...) took 204.8538ms
[debug]   Load.apply: load took 393.1134ms
[debug]   Load.apply: resolveProjects took 7.1083ms
[debug]   Load.apply: finalTransforms took 76.3545ms
[debug]   Load.apply: config.delegates took 9.2171ms
[debug]   Load.apply: Def.make(settings)... took 1935.0039ms
[debug]   Load.apply: structureIndex took 97.7761ms
[debug]   Load.apply: mkStreams took 2.0301ms
[info] loading global plugins from C:\Users\ferna\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6158.115ms
[debug]           Load.loadUnit: plugins took 23.3928ms
[debug]           Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\ferna\Documents\CS671\1\project
[debug]             Load.loadUnit: mkEval took 6.6481ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\ferna\Documents\CS671\1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.4178 ms
[info] loading settings for project root-1-build from idea.sbt ...
[debug]               Load.resolveProject(root-1-build) took 3.1872ms
[debug]             Load.loadTransitive: finalizeProject(Project(id root-1-build, base: C:\Users\ferna\Documents\CS671\1\project, plugins: List(<none>))) took 5.1896ms
[debug] [Loading] Done in C:\Users\ferna\Documents\CS671\1\project, returning: (root-1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2551.9302ms
[debug]           Load.loadUnit: cleanEvalClasses took 7.8075ms
[debug]         Load.loadUnit(file:/C:/Users/ferna/Documents/CS671/1/project/, ...) took 2584.2651ms
[debug]       Load.apply: load took 2585.6037ms
[debug]       Load.apply: resolveProjects took 0.0882ms
[debug]       Load.apply: finalTransforms took 10.681ms
[debug]       Load.apply: config.delegates took 0.6248ms
[debug]       Load.apply: Def.make(settings)... took 72.593ms
[debug]       Load.apply: structureIndex took 26.161ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] loading project definition from C:\Users\ferna\Documents\CS671\1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3161.9872ms
[debug]     Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\ferna\Documents\CS671\1
[debug]       Load.loadUnit: mkEval took 0.2756ms
[debug] [Loading] Found root project mastermind w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.988 ms
[info] loading settings for project mastermind from build.sbt,mastermind.sbt ...
[debug]         Load.resolveProject(mastermind) took 48.7477ms
[debug]       Load.loadTransitive: finalizeProject(Project(id mastermind, base: C:\Users\ferna\Documents\CS671\1, plugins: List(<none>))) took 53.179ms
[debug] [Loading] Done in C:\Users\ferna\Documents\CS671\1, returning: (mastermind)
[debug]     Load.loadUnit: loadedProjectsRaw took 3004.6471ms
[debug]     Load.loadUnit: cleanEvalClasses took 65.8492ms
[debug]   Load.loadUnit(file:/C:/Users/ferna/Documents/CS671/1/, ...) took 6233.5857ms
[debug] Load.apply: load took 6235.734ms
[debug] Load.apply: resolveProjects took 0.1598ms
[debug] Load.apply: finalTransforms took 32.3051ms
[debug] Load.apply: config.delegates took 0.4729ms
[debug] Load.apply: Def.make(settings)... took 112.0967ms
[debug] Load.apply: structureIndex took 41.0215ms
[debug] Load.apply: mkStreams took 0.0043ms
[info] set current project to mastermind (in build file:/C:/Users/ferna/Documents/CS671/1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54570 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54570, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to mastermind (in build file:/C:/Users/ferna/Documents/CS671/1/)
[debug] > Exec(idea-shell, None, None)
